
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author pearl
 */
/**
 * Kelas Menu_Masakan adalah JFrame yang menangani proses CRUD (Create, Read, Update, Delete)
 * terhadap data masakan pada aplikasi kasir atau restoran.
 * Kelas ini juga menangani filtering data berdasarkan status masakan (Tersedia/Habis).
 */
public class Menu_Masakan extends javax.swing.JFrame {

    /**
     * Model untuk menampung data pada JTable.
     */
    private DefaultTableModel model = null;

    /**
     * Objek untuk menjalankan perintah SQL yang telah dipersiapkan.
     */
    private PreparedStatement stat;

    /**
     * Menampung hasil eksekusi query SQL.
     */
    private ResultSet rs;

    /**
     * Objek koneksi ke database.
     */
    koneksi k = new koneksi();

    /**
     * Konstruktor default untuk Menu_Masakan.
     * Inisialisasi komponen, membuka koneksi ke database, dan memuat data masakan.
     */
    public Menu_Masakan() {
        initComponents();
        k.connect();
        refreshTable();
    }

    /**
     * Memfilter dan menampilkan data masakan berdasarkan status tertentu (Tersedia/Habis).
     *
     * @param status Status masakan yang akan difilter.
     */
    private void filterDataByStatus(String status) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nama Masakan");
        model.addColumn("Harga");
        model.addColumn("Status");

        try {
            Connection con = k.getCon();
            String sql = "SELECT * FROM masakan WHERE status = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, status);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("id_masakan"),
                    rs.getString("nama_masakan"),
                    rs.getString("harga"),
                    rs.getString("status")
                });
            }

            table_masakan.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal memfilter data: " + e.getMessage());
        }
    }

    /**
     * Kelas turunan dari Menu_Masakan untuk mempermudah pengambilan data dari form input.
     */
    class masakan extends Menu_Masakan {
        int id_masakan, harga;
        String nama_masakan, status;

        /**
         * Konstruktor masakan yang mengambil data langsung dari input form.
         */
        public masakan() {
            this.nama_masakan = text_nama_masakan.getText();
            this.harga = Integer.parseInt(text_harga_makanan.getText());
            this.status = combo_status_masakan.getSelectedItem().toString();
        }
    }

    /**
     * Mengambil seluruh data masakan dari database dan menampilkannya ke dalam tabel.
     */
    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) table_masakan.getModel();
        model.setRowCount(0);

        try {
            Connection conn = k.getCon();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("select * from masakan");

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id_masakan"),
                    rs.getString("nama_masakan"),
                    rs.getInt("harga"),
                    rs.getString("status")
                };
                model.addRow(row);
            }

            rs.close();
            stmt.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal mengambil data: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        text_id_masakan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        text_nama_masakan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        text_harga_makanan = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        combo_status_masakan = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_masakan = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        button_input = new javax.swing.JButton();
        button_registrasi = new javax.swing.JButton();
        button_update = new javax.swing.JButton();
        button_delete = new javax.swing.JButton();
        button_transaksi = new javax.swing.JButton();
        button_logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("ID MASAKAN");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel2.setText("MENU MASAKAN");

        text_id_masakan.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("NAMA MASAKAN");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("STATUS MAKANAN");

        text_harga_makanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_harga_makananActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("HARGA");

        combo_status_masakan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        combo_status_masakan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TERSEDIA", "HABIS" }));
        combo_status_masakan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_status_masakanActionPerformed(evt);
            }
        });

        table_masakan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_masakan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_masakanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_masakan);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        button_input.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button_input.setText("INPUT");
        button_input.setEnabled(false);
        button_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_inputActionPerformed(evt);
            }
        });

        button_registrasi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button_registrasi.setText("MENU REGISTRASI");
        button_registrasi.setEnabled(false);
        button_registrasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_registrasiActionPerformed(evt);
            }
        });

        button_update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button_update.setText("UPDATE");
        button_update.setEnabled(false);
        button_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_updateActionPerformed(evt);
            }
        });

        button_delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button_delete.setText("DELETE");
        button_delete.setEnabled(false);
        button_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(button_input, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button_update, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button_registrasi, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_input, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_registrasi, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_update, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        button_transaksi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button_transaksi.setText("MENU TRANSAKSI");
        button_transaksi.setEnabled(false);
        button_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_transaksiActionPerformed(evt);
            }
        });

        button_logout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button_logout.setText("LOGOUT");
        button_logout.setEnabled(false);
        button_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_id_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(text_harga_makanan, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                                    .addComponent(combo_status_masakan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(45, 45, 45)
                                .addComponent(text_nama_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(button_transaksi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button_logout))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_transaksi)
                    .addComponent(button_logout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text_id_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(text_nama_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_harga_makanan, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_status_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text_harga_makananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_harga_makananActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_harga_makananActionPerformed

    /**
     * Logout dari menu masakan dan kembali ke form login.
     */
    private void button_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_logoutActionPerformed
        // TODO add your handling code here:
        login l = new login();
        l.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_logoutActionPerformed

     /**
     * Menambahkan data masakan baru ke database berdasarkan input form.
     */
    private void button_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_inputActionPerformed
        // TODO add your handling code here:
        try{
            masakan m = new masakan();
           this.stat = k.getCon().prepareStatement("insert into masakan (id_masakan, nama_masakan, harga, status) values (?, ?, ?, ?)");
            stat.setInt(1, 0);
            stat.setString(2, m.nama_masakan);
            stat.setInt(3, m.harga);
            stat.setString(4, m.status);
            stat.executeUpdate();
            refreshTable(); 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_button_inputActionPerformed

    /**
     * Mengisi form input berdasarkan baris yang diklik dari tabel masakan.
     */
    private void table_masakanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_masakanMouseClicked
        // TODO add your handling code here:
        int row = table_masakan.getSelectedRow();
    text_id_masakan.setText(table_masakan.getValueAt(row, 0).toString());
    text_nama_masakan.setText(table_masakan.getValueAt(row, 1).toString());
    text_harga_makanan.setText(table_masakan.getValueAt(row, 2).toString());
    combo_status_masakan.setSelectedItem(table_masakan.getValueAt(row, 3).toString());
    }//GEN-LAST:event_table_masakanMouseClicked

    /**
     * Memperbarui data masakan berdasarkan input form dan ID yang dipilih.
     */
    private void button_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_updateActionPerformed
        // TODO add your handling code here:
        try{
            masakan m = new masakan();
            stat = k.getCon().prepareStatement("update masakan set nama_masakan=?, harga=?, status=? where id_masakan=?");
        stat.setString(1, m.nama_masakan);
        stat.setInt(2, m.harga);
        stat.setString(3, m.status);
        stat.setInt(4, Integer.parseInt(text_id_masakan.getText()));
        stat.executeUpdate();
        refreshTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_button_updateActionPerformed

     /**
     * Menghapus data masakan berdasarkan ID yang dipilih pada form.
     */
    private void button_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_deleteActionPerformed
        // TODO add your handling code here:
        try{
             this.stat = k.getCon().prepareStatement("delete from masakan where id_masakan=?");
             stat.setInt(1, Integer.parseInt(text_id_masakan.getText()));
             stat.executeUpdate();
             refreshTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_button_deleteActionPerformed

    /**
     * Berpindah ke form registrasi pengguna.
     */
    private void button_registrasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_registrasiActionPerformed
        // TODO add your handling code here:
        Menu_Registrasi reg = new Menu_Registrasi();
        reg.setVisible(true);
        this.setVisible(false);        
    }//GEN-LAST:event_button_registrasiActionPerformed

     /**
     * Berpindah ke form transaksi.
     */
    private void button_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_transaksiActionPerformed
        // TODO add your handling code here:
        Menu_Transaksi reg = new Menu_Transaksi();
        reg.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_transaksiActionPerformed

    /**
     * Memfilter data di tabel berdasarkan status yang dipilih di combo box.
     */
    private void combo_status_masakanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_status_masakanActionPerformed
        // TODO add your handling code here:
        String selectedStatus = combo_status_masakan.getSelectedItem().toString();
        filterDataByStatus(selectedStatus);
    }//GEN-LAST:event_combo_status_masakanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_Masakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_Masakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_Masakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_Masakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_Masakan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton button_delete;
    public javax.swing.JButton button_input;
    public javax.swing.JButton button_logout;
    public javax.swing.JButton button_registrasi;
    public javax.swing.JButton button_transaksi;
    public javax.swing.JButton button_update;
    private javax.swing.JComboBox<String> combo_status_masakan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_masakan;
    private javax.swing.JTextField text_harga_makanan;
    private javax.swing.JTextField text_id_masakan;
    private javax.swing.JTextField text_nama_masakan;
    // End of variables declaration//GEN-END:variables
}
